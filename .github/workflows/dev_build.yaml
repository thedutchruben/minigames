name: Build DEV Jars

on: [push, pull_request]

jobs:
  build_dev_jars:
    name: Build DEV jars
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3.1.0
        with:
          fetch-depth: 0

      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Build with Maven
        run: |
          mvn package
          git_hash=$(git rev-parse --short "$GITHUB_SHA")
          echo "git_hash=$git_hash" >> $GITHUB_ENV
          echo "artifactPath=$(pwd)" >> $GITHUB_ENV
      - name: Extract Maven project version
        run: echo ::set-output name=version::$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
        id: project
      - name: Cache local Maven repository
        uses: actions/cache@v4
        with:
            path: ~/.m2/repository
            key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
            restore-keys: |
              ${{ runner.os }}-maven-

#      Upload core
      - name: Upload Core
        uses: actions/upload-artifact@v3
        with:
          name: minigames.core-${{ steps.project.outputs.version }}.jar
          path: ${{ env.artifactPath }}/core/target/minigames.core-${{ steps.project.outputs.version }}.jar
      - name: Nexus Repo Publish
        uses: sonatype-nexus-community/nexus-repo-github-action@master
        with:
          serverUrl: https://repo.thedutchruben.nl
          username: admin
          password: ${{ secrets.password }}
          format: maven2
          repository: maven-releases
          coordinates: groupId=nl.thedutchruben artifactId=minigames.core version=${{ steps.project.outputs.version }}
          assets: extension=jar
          filename: ${{ env.artifactPath }}/core/target/minigames.core-${{ steps.project.outputs.version }}.jar
      - name: Send core message
        uses: appleboy/discord-action@master
        with:
          webhook_id: ${{ secrets.WEBHOOK_ID }}
          webhook_token: ${{ secrets.WEBHOOK_TOKEN }}
          file: ${{ env.artifactPath }}/core/target/minigames.core-${{ steps.project.outputs.version }}.jar
          message: "New minigames.core build: ${{ steps.project.outputs.version }} - ${{ env.git_hash }}"
          color: "#48f442"
          username: "minigames.core Builds"
      - name: Sleep for 5 seconds
        uses: jakejarvis/wait-action@master
        with:
          time: '5s'
      #      Upload Tntgames
      - name: Upload Tntgames
        uses: actions/upload-artifact@v3
        with:
          name: minigames.tntgames-${{ steps.project.outputs.version }}.jar
          path: ${{ env.artifactPath }}/tntgames/target/minigames.tntgames-${{ steps.project.outputs.version }}.jar

      - name: Send Tntgames message
        uses: appleboy/discord-action@master
        with:
          webhook_id: ${{ secrets.WEBHOOK_ID }}
          webhook_token: ${{ secrets.WEBHOOK_TOKEN }}
          file: ${{ env.artifactPath }}/tntgames/target/minigames.tntgames-${{ steps.project.outputs.version }}.jar
          message: "New minigames.Tntgames build: ${{ steps.project.outputs.version }} - ${{ env.git_hash }}"
          color: "#48f442"
          username: "minigames.Tntgames Builds"
      - name: Sleep for 5 seconds
        uses: jakejarvis/wait-action@master
        with:
          time: '5s'